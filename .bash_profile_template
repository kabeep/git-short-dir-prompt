# rewrite prompt string 1 content
PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]'  # Set terminal window title to include PWD (Present Working Directory)
PS1="$PS1"'\n'                          # Add a new line to the prompt
PS1="$PS1"'\[\033[32m\]'                # Change text color to green
PS1="$PS1"'username'                    # username
PS1="$PS1"'\[\033[35m\]'                # Change text color to purple
PS1="$PS1"'@hostname '                  # hostname
PS1="$PS1"'\[\033[33m\]'                # Change text color to brownish yellow

# Check if WINELOADERNOEXEC is not set, if not, proceed to configure Git related prompts
if test -z "$WINELOADERNOEXEC"
then
    # Determine the path for Git completions
    GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"
    COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"
    COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"
    COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"

    # Check if git-short-dir-prompt.sh exists and source it if it does
    if test -f "$COMPLETION_PATH/git-short-dir-prompt.sh"
    then
        . "$COMPLETION_PATH/git-short-dir-prompt.sh"
        PS1="$PS1"'`__git_short_dir_ps1`'  # Add the output from __git_short_dir_ps1 function to PS1
    fi

    # Check if git-prompt.sh exists and source it if it does
    if test -f "$COMPLETION_PATH/git-prompt.sh"
    then
        . "$COMPLETION_PATH/git-completion.bash"
        . "$COMPLETION_PATH/git-prompt.sh"
        PS1="$PS1"'\[\033[36m\]'  # Change text color to cyan
        PS1="$PS1"'`__git_ps1`'   # Add the output from __git_ps1 function to PS1
    fi
else
    PS1="$PS1"'\w'  # Display the current working directory if WINELOADERNOEXEC is set
fi

PS1="$PS1"'\[\033[0m\]'         # Reset text color to default
PS1="$PS1"'\n'                  # Add a new line
PS1="$PS1"'$ '                  # Finalize the prompt with a dollar sign

# Include other configuration files if they exist
# generated by Git for Windows
test -f ~/.profile && . ~/.profile  # Source the .profile file if it exists
test -f ~/.bashrc && . ~/.bashrc    # Source the .bashrc file if it exists
